---
name: Package Windows
on:
  release:
    types:
      - published
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [12.x]
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            installer-prefix: desktop-
            installer-postfix: -setup.exe
            nupkg-prefix: desktop-
            nupkg-postfix: -full.nupkg
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install npm dependencies
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
      - name: Build asar
        run: |
          npm run asar
      - name: Build packages
        run: |
          npm run package:${{ matrix.platform }}
      - name: Get upload_url
        run: | 
          echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"  
        id: release
        shell: bash
      - name: Get version
        run: |
          echo "::set-output name=version::${GITHUB_REF##*/v}"
        id: version
        shell: bash
      - name: Get zip file
        run: |
          echo "::set-output name=filename::desktop-${{ steps.version.outputs.version }}-${{ matrix.platform }}-${{ matrix.arch }}.zip"
        id: zip
        shell: bash
      - name: Get installer file
        run: | 
          echo "::set-output name=filename::${{ matrix.installer-prefix }}${{ steps.version.outputs.version }}${{ matrix.installer-postfix }}"
        id: installer
        shell: bash
      - name: Get nupkg file
        run: | 
          echo "::set-output name=filename::${{ matrix.nupkg-prefix }}${{ steps.version.outputs.version }}${{ matrix.nupkg-postfix }}"
        id: nupkg
        shell: bash
      - name: Upload Package Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: packages/desktop/pack/${{ steps.zip.outputs.filename }}
          asset_name: ${{ steps.zip.outputs.filename }}
          asset_content_type: application/zip
      - name: Upload Package Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: packages/desktop/pack/${{ steps.installer.outputs.filename }}
          asset_name: ${{ steps.installer.outputs.filename }}
          asset_content_type: application/octet-stream
      - name: Upload Package Nupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: packages/desktop/pack/${{ steps.nupkg.outputs.filename }}
          asset_name: ${{ steps.nupkg.outputs.filename }}
          asset_content_type: application/octet-stream
      - name: Upload Package RELEASES
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: packages/desktop/pack/RELEASES
          asset_name: RELEASES
          asset_content_type: application/octet-stream
